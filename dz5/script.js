/*
1. Сделайте функцию, которая отнимает от первого числа второе и делит на
третье. Числа передаются параметром.
*/

{
const result = function(a, b, c) {
    return (a - b) / c;
};

console.log(result(37, 7, 2));
}

/*
2. Сделайте функцию, которая возвращает куб числа и его квадрат. Число
передается параметром.
*/

{
const squareCube = function(a) {
    cube = a * a * a;
    square = a * a;
};

squareCube(4);
console.log(`Cube number: ${cube}, square number: ${square}`);
}

/*
3. Напишите функции min и max, которые возвращают меньшее и большее из
чисел a и b.
*/

{
const min = function(a, b) {
    if (a > b) return b;
    else return a;
};

const max = function(a, b) {
    if (a > b) return a;
    else return b;
};

console.log(`Меньшее - ${min(36, 9)}`)
console.log(`Большее - ${max(365, 12)}`)
}

/*
4. Напишите две функции: первая ф-ция должна возвращать массив с
числовыми значениями, диапазон которых должен вводиться пользователем
с клавиатуры; вторая – выводить полученный массив.
*/

{
var a = prompt('Введите первое число');
var b = prompt('Введите второе число');
let arr1 = [];

const arr = function(a, b) {
    if (a < b) {
        for (let i = a; i <= b; i++) {
            arr1.push(i);
        }
    } else {
        for (; b <= a; a--) {
            arr1.push(a);
        }
    }
    return;
}


arr(a, b);

const show = function(arr) {
    console.log(arr1);
}

show(arr);
}

/*
5. Сделайте функцию isEven() (even - это четный), которая параметром
принимает целое число и проверяет: четное оно или нет. Если четное - пусть
функция возвращает true, если нечетное — false.
*/

function isEven(even) {
    if (even%2 === 0) return true;
    else return false;
}

// isEven(8);

/*
6. Напишите ф-цию, в которую передается массив с целыми числами.
Верните новый массив, где останутся лежать только четные из этих чисел.
Для этого используйте вспомогательную функцию isEven из предыдущей
задачи.
*/

function addArr(arr) {
    let arr1 = [];
    for (let i = 0; i < arr.length; i++) {
        if (isEven(arr[i]) == true) {
            arr1.push(arr[i]);
        }
    }
    
    return console.log(arr1);
}

addArr([1, 2, 3, 4, 5, 6, 7, 8, 9]);

/*
7. Напишите ф-цию, которая рисует следующую пирамидку (исп. вложенные
циклы):
1
22
333
4444
55555
666666
7777777
88888888
999999999
Кол-во рядов должно вводиться параметром. Если пользователь ввел доп.
параметр, непредусмотренный ф-цией по умолчанию - один любой символ,
кроме пробела, то пирамида должна быть нарисована этим символом,
например:

*
**
***
****
*****
******
*******
********
*********
*/

const pir = function(h) {
    let line = '';
    let char = '';

    if (arguments[1]) char = arguments[1];

    for (let i = 1; i <= h; i++) {
        for (let j = 1; j <= i; j++) {
            if (!char) line += i;
            else line += char;
        }

        console.log(line);
        line = '';
    }
}

pir(prompt('Введите высоту'), prompt('Символ'));

/*
8. Напишите ф-цию, которая рисует равнобедренный треугольник из
звездочек:

                            *
                           ***
                          *****
                         *******
                        *********

Кол-во рядов должно вводиться с клавиатуры. Доп., напишите такую же ф-
цию, но которая выведет перевернутый треугольник.
*/

const triangle = function(h) {
    let line = '';

    for (let i = 1; i <= h; i++) {
        line += '';

        for (let j = 1; j <= (h - i); j++) {
            line += ' ';
        }
        
        for (let j = 1; j <= (i * 2) - 1; j++) {
            line += '*';
        }
        console.log(line);
        line = '';
    }
}

const triangleRev = function(h) {

    for (let i = h; i >= 0; i--) {
        let line = '';
        for (let j = 1; j <= (h - i); j++) {
            line += ' ';
        }

        for (let j = 1; j <= ((i * 2) - 1); j++) {
            line += '*';
        }

        console.log(line);
    }
}

triangle(prompt('Задайте высоту треугольника'));
triangleRev(prompt('Задайте высоту треугольника'));

/*
9. Напишите ф-цию, которая возвращает массив заполненный числами
Фибоначи от 0 до 1000.
*/

const fib = function() {
    let arr = [];

    for (let i = 0; ; i++) {
        if (i == 0) {
            arr.push(0, 1);
            continue;
        }

        let a = arr[i-1];
        let b = arr[i];
        let c = a + b;

        if (c >= 1000) break;

        arr.push(c);
    }

    return arr;
}

console.log(fib());

/*
10. Дано число. Сложите его цифры. Если сумма получилась более 9-ти,
опять сложите его цифры. И так, пока сумма не станет однозначным числом
(9 и менее). Исп. Рекурсию.
*/

const calcNum = function(num) {
    num = String(num);
    let sum = 0;
    
    for (let i = 0; i < num.length; i++) {
        sum += +num[i];
    }

    if (sum > 9) {
        return calcNum(sum);
    } else {
        console.log(sum);
    }
}

calcNum(379639845);


/*
11. Дан массив с числами (передается параметром). Выведите
последовательно его элементы, используя рекурсию и не используя цикл.
*/

const showArr = function(arr) {

    for (let i = 0; i < arr.length; i++) {
        console.log(arr[i]);
    }
}

showArr([34, 5, 23, 55, 9, -7, 3, 12]);

/*
12. Напишите ф-цию, запрашивающую имя, фамилия, отчество и номер
группы студента и выводящую введённые данные в следующем виде:

*******************************
* Домашняя работа: «Функции»  *
* Выполнил: студент гр. W4017 *
* Иванов Иван Иванович        *
*******************************

Размер рамки должен определятся автоматически по самой длинной строке.
Рамку вывести в консоль.
*/

let fio = 'Иванов Иван Иванович';
let group = 'FE118';

let str1 = 'Домашняя работа: «Функции»';
let str2 = `Выполнил: студент гр. ${group}`;
let str3 = fio;

let maxLength = str1.length;
if (str2.length > maxLength) maxLength = str2.length;
if (str3.length > maxLength) maxLength = str3.length;

maxLength += 4;

let strFirstLast = '';

for (let i = 1; i <= maxLength; i++) {
    strFirstLast += '*';
}

const spaces = function(count) {
    let str = '';

    for (let i = 1; i <= count; i++) {
        str += ' ';
    }

    return str;
};

console.log(strFirstLast);
console.log('* ' + str1 + spaces(maxLength - str1.length - 4) + ' *');
console.log('* ' + str2 + spaces(maxLength - str2.length - 4) + ' *');
console.log('* ' + str3 + spaces(maxLength - str3.length - 4) + ' *');
console.log(strFirstLast);

/*
13. Напишите ф-цию, которая должна проверить правильность ввода адреса
эл. почты, неиспользуя регулярные выражения. Почта верна при условии:
a. весь адрес не должен содержать русские буквы и спецсимволы, кроме
одной «собачки», знака подчеркивания, дефиса и точки, причем они не могут
быть первыми и последними в адресе, и идти подряд, например: «..», «@.»,
«.@» или «@@», «_@», «@-», «--» и т.п.
b. имя эл. почты (до знака @) должно быть длиной более 2 символов, причем
имя может содержать только буквы, цифры, но не быть первыми и
единственными в имени, и точку;
c. после последней точки и после @, домен верхнего уровня (ru, by, com и
т.п.) не может быть длиной менее 2 и более 11 символов.

Для ввода значений можете использовать ф-цию prompt(), либо задавать
значения при инициализации переменных в коде.
Для вывода результатов скриптов вы можете использовать функции: alert()
для вывода всплывающего окна; console.log() для вывода в консоль браузера;
document.write() для вывода в «тело» HTML-документа.
*/