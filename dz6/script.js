/*1. Напишите функцию, которая переворачивает число, например: 5675 => 5765.*/

/*2. Напишите функцию, которая проверяет, является ли переданная строка палиндромом.*/

/*3. Напишите функцию alphabetOrder(str), которая возвращает переданную строку с буквами в алфавитном порядке. Пример строки: 'alphabetical'. Ожидаемый результат: 'aaabcehillpt'. Предположим, что символы пунктуации и цифры не включены в переданную строку.*/

/*4. Напишите функцию findLongestWord(str), которая принимает строку в качестве параметра и находит самое длинное слово в строке.*/

/*5. Напишите функцию, которая возвращает элементы массива, которые больше указанного числа. Нельзя использовать циклы for или while.*/

/*6. Дан массив [1, 2, 3, 4, 5]. Написать рекурсивную функцию, которая выводит элементы массива в обратном порядке.*/

/*7. Есть массив arr = [0, true, false, true, 1, true, true, false, "true", undefined, "1", null]. Необходимо написать функцию, которая вернет количество true (boolean) элементов.*/

/*8. Нужно написать функцию, которая проверяет, являются ли две строки анаграммами, причем регистр букв не имеет значения. Учитываются лишь символы; пробелы или знаки препинания в расчет не берутся.*/

/*9. Напишите функцию createArr(), которая создает массив, заполняемый "руками" (например, через prompt()), пока пользователь не введет пустую строку. Функция должна вернуть созданный массив.*/

/*10. Напишите функцию createPassword по созданию паролей длиной от минимум 6 символов, либо до кол-ва введеного через параметр. Обязательные требования к паролю: латинские символы и целые числа; специальные симоволы: _-,.&*^$#@+=!; минимум один большой симовол, одна цифра, один спец. символ.*/

/*11. Сделайте функцию inArray, которая определяет, есть в массиве элемент с заданным значением или нет. Функция первым параметром должна принимать значение элемента, а вторым - массив, в котором делается поиск. Функция должна возвращать true или false. Нельзя пользоваться методами indexOf (или lastIndexOf), циклами for или while.*/


/*12. Перепишите код, заменив цикл for на метод map:

let arr = ["Есть", "жизнь", "на", "Марсе"];

const arrLength = [];
for (let i = 0; i < arr.length; i++) {
	arrLength.push(arr[i].length);
}

console.log(arrLength); // 4,5,2,5*/


/*13. Есть 2 массива: arr1 = [1,2,3,4,5,6,7,8] и arr2 = [5, 3, 6, 9, 11]. Напишите функцию, которая принимает 2 массива и возвращает массив элементов, которые есть в обоих массивах. Решите задачу задачу двумя способами: используя оператор расширения; используя цикл.*/


/*14. Напишите функцию copyArr(arr), которая копирует массив не изменяя оригинал. Скопируйте массив vegetables в новый, и добавьте в него любой элемент.

const vegetables = ['Капуста', 'Репа', 'Редиска', 'Морковка'];

Решите задачу задачу двумя способами: используя оператор расширения; используя цикл.*/


/*15. Напишите функцию numProducts(num),  которая в зависимости от переданного в нее целочисленного аргумента num, будет выводить слово «товар» в нужной форме («12 товаров», но «22 товара»). По умолчанию аргумент num должен иметь значение 0.*/


/*16. Создайте функцию "Калькулятор", calc(expression), которая должны уметь вычислять операции: сложение, вычитание, умножение, разность; между положительными целочисленными значениями. Математическое выражение должно передаваться через параметр expression в виде строки, например: "45+8", "4-23". Если параметр не передается, то нужно запросить выражение через promp. Результат вычисления выведите через alert. Используйте регулярные выражения для "парсинг" (обработки) параметра).*/


/*17. Напиши функцию, которая будет проверять любой объем текста на вхождение плохих (запрещенных) слов, и возвращать новый, прошедший цензуру, текст. Запрещенные слова нужно заменить на символы "#" в зависимости от длины слова. В функцию нужно передавать два параметра: текст, массив запрещенных слов.*/